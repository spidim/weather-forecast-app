# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from backend_server.models.base_model_ import Model
from backend_server import util


class ForecastInfoTemperature(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, hourly_graph_url: str=None, hourly_forecast: List[float]=None):  # noqa: E501
        """ForecastInfoTemperature - a model defined in Swagger

        :param hourly_graph_url: The hourly_graph_url of this ForecastInfoTemperature.  # noqa: E501
        :type hourly_graph_url: str
        :param hourly_forecast: The hourly_forecast of this ForecastInfoTemperature.  # noqa: E501
        :type hourly_forecast: List[float]
        """
        self.swagger_types = {
            'hourly_graph_url': str,
            'hourly_forecast': List[float]
        }

        self.attribute_map = {
            'hourly_graph_url': 'hourly_graph_url',
            'hourly_forecast': 'hourly_forecast'
        }

        self._hourly_graph_url = hourly_graph_url
        self._hourly_forecast = hourly_forecast

    @classmethod
    def from_dict(cls, dikt) -> 'ForecastInfoTemperature':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ForecastInfo_temperature of this ForecastInfoTemperature.  # noqa: E501
        :rtype: ForecastInfoTemperature
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hourly_graph_url(self) -> str:
        """Gets the hourly_graph_url of this ForecastInfoTemperature.

        Url of temperature forecast graph  # noqa: E501

        :return: The hourly_graph_url of this ForecastInfoTemperature.
        :rtype: str
        """
        return self._hourly_graph_url

    @hourly_graph_url.setter
    def hourly_graph_url(self, hourly_graph_url: str):
        """Sets the hourly_graph_url of this ForecastInfoTemperature.

        Url of temperature forecast graph  # noqa: E501

        :param hourly_graph_url: The hourly_graph_url of this ForecastInfoTemperature.
        :type hourly_graph_url: str
        """

        self._hourly_graph_url = hourly_graph_url

    @property
    def hourly_forecast(self) -> List[float]:
        """Gets the hourly_forecast of this ForecastInfoTemperature.


        :return: The hourly_forecast of this ForecastInfoTemperature.
        :rtype: List[float]
        """
        return self._hourly_forecast

    @hourly_forecast.setter
    def hourly_forecast(self, hourly_forecast: List[float]):
        """Sets the hourly_forecast of this ForecastInfoTemperature.


        :param hourly_forecast: The hourly_forecast of this ForecastInfoTemperature.
        :type hourly_forecast: List[float]
        """

        self._hourly_forecast = hourly_forecast
